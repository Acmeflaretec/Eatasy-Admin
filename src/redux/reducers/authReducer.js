import { createSlice } from '@reduxjs/toolkit';
import { login, logout, isUserLoggedIn } from '../actions/authActions'; // Assuming you've implemented these as async thunks

const initialState = {
  token: null,
  user: null,
  isAuthenticated: false,
  authenticating: false,
  loading: false,
  error: null,
  message: "",
};

const authSlice = createSlice({
  name: 'auth',
  initialState,
  reducers: {
    clearError: (state) => {
      state.error = null;
    },
  },
  extraReducers: (builder) => {
    builder
      .addCase(login.pending, (state) => {
        state.authenticating = true;
        state.loading = true;
      })
      .addCase(login.fulfilled, (state, action) => {
        state.token = action.payload;
        state.isAuthenticated = true;
        state.authenticating = false;
        state.loading = false;
        state.error = null;
      })
      .addCase(login.rejected, (state, action) => {
        state.error = action.payload.error;
        state.isAuthenticated = false;
        state.authenticating = false;
        state.loading = false;
      })
      .addCase(logout.pending, (state) => {
        state.loading = true;
        state.isAuthenticated = true;
      })
      .addCase(logout.fulfilled, (state) => {
        return initialState;
      })
      .addCase(logout.rejected, (state, action) => {
        state.error = action.payload.error;
        state.loading = false;
        state.isAuthenticated = false;
      })
      .addCase(isUserLoggedIn.fulfilled, (state, action) => {
        state.token = action.payload.token;
        state.user = action.payload.user;
        state.isAuthenticated = true;
      });
  },
});

// Export the action creators generated by createSlice
export const { clearError } = authSlice.actions;

// Export the reducer to be used in the store
export default authSlice.reducer;
